(include "workspaces.yuck")

(defwindow main
           :monitor 0
           :geometry (geometry :x "0%"
                               :y "2px"
                               :width "100%"
                               :height "30px"
                               :anchor "top center")
	   :exclusive true
           :reserve (struts :distance "40px" :side "top")
           :windowtype "dock"
           :wm-ignore false
  (bar)

)

(defwidget bar []
  (centerbox
    (left)
    (workspaces)
    (right)
    ))


(defwidget left []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "start"
    (circle-display :icon "ðŸšƒ" :tooltip "${used_mem}/${total_mem}" :value {EWW_RAM.used_mem_perc})
    (circle-display :icon "ðŸ’¾" :tooltip storage :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)})
  )
)

(defpoll used_mem :interval "1s"
`free | awk '/Mem/ {printf "%.1f", $3 / 1024 / 1024}'`)
(defpoll total_mem :interval "1s"
`free | awk '/Mem/ {printf "%.1f", $2 / 1024 / 1024}'`)

(defwidget right []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (metric :label "ðŸ”Š ${volume}"
            :value volume
            :onchange "pamixer --set-volume {}")
    (metric :label "ðŸ”† ${brightness}"
            :value brightness
            ;; :drawvalue
            ;; :onchange "ddcutil setvcp 10 {} --noverify --sleep-multiplier=0.1")
            :onchange "scripts/setbrightness {}")
    ;; (metric :label "ðŸ’¾"
    ;;         :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
    ;;         :onchange "")
    ;; (calendar)
    (label :class "metric" :text time :space-evenly false :halign "end")
    ))


(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    ;; (box :class "label" label)
    (label :text label)
    (scale :min 0
           :max 100
           :width 200
           :active {onchange != ""}
           :value value
           :onchange onchange
           ;; :draw-value true
           :timeout "5s")))

(defwidget circle-display [icon tooltip value]
    (box :class "metric" :space-evenly false :tooltip tooltip
      (label :text icon)
      (circular-progress
              :class "circle"
              ;; :value {EWW_RAM.used_mem_perc}
              :value value
              :start-at 20
              :thickness 3
              :width 28
              )
            )
)

(defpoll time :interval "200ms"
  `date +%H:%M:%S`)

(defpoll volume :initial "50" :interval "1s"
  "scripts/getvol")

(defpoll brightness :initial "80" :interval "3s"
  "scripts/getbrightness")

(defpoll storage :interval "10s"
  "df -h / | awk 'NR>1 {print $3 \"/\" $2}'")
