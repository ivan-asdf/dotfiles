(defpoll used_mem :interval "1s"
`free | awk '/Mem/ {printf "%.1f", $3 / 1024 / 1024}'`)
(defpoll total_mem :interval "1s"
`free | awk '/Mem/ {printf "%.1f", $2 / 1024 / 1024}'`)
(defpoll storage :interval "10s"
"df -h / | awk 'NR>1 {print $3 \"/\" $2}'")
(defpoll cpu :interval "500ms"
`./scripts/cpu_usage`)

(defwidget left []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "start"
    (circle-display :icon "ðŸšƒ" :tooltip "${used_mem}/${total_mem}" :value {EWW_RAM.used_mem_perc})
    (circle-display :icon "ðŸ’¾" :tooltip storage :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)})
    ;; (label :text "HELLO")
    (box
      :orientation "h"
      :class "cpu-scale"
      :space-evenly true
      (cpu :cpu_usage {cpu[0]})
      (cpu :cpu_usage {cpu[1]})
      (cpu :cpu_usage {cpu[2]})
      (cpu :cpu_usage {cpu[3]})
      (cpu :cpu_usage {cpu[4]})
      (cpu :cpu_usage {cpu[5]})
      (cpu :cpu_usage {cpu[6]})
      (cpu :cpu_usage {cpu[7]})
      (cpu :cpu_usage {cpu[8]})
      (cpu :cpu_usage {cpu[9]})
      (cpu :cpu_usage {cpu[10]})
      (cpu :cpu_usage {cpu[11]})
      (cpu :cpu_usage {cpu[12]})
      (cpu :cpu_usage {cpu[13]})
      (cpu :cpu_usage {cpu[14]})
      (cpu :cpu_usage {cpu[15]})
    )
  )
)

(defwidget circle-display [icon tooltip value]
  (box :class "metric" :space-evenly false :tooltip tooltip
    (label :text icon)
    (circular-progress
      :class "circle"
      :value value
      :start-at 20
      :thickness 3
      :width 28
    )
  )
)

(defwidget cpu [cpu_usage]
    (scale
      :min 0
      :max 100
      :value cpu_usage
      :orientation "v"
      :flipped true
    )
)


